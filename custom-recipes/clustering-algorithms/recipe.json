{
    "meta" : {
        "label" : "Graph clustering",
        "description": "This recipe uses the python igraph library to compute clustering algorithms from a dataset of relations. It works better when the graph is connected (one connected component)",
        "icon": "icon-sitemap",
        "displayOrderRank": 1
    },

    "kind" : "PYTHON",
    "selectableFromDataset" : "input_dataset",

    "inputRoles" : [
        {
            "name": "input_dataset",
            "label": "Input Dataset",
            "description": "Rows of the input dataset must have a Source and a Target column",
            "arity": "UNARY",
            "required": true,
            "acceptsDataset": true
        }
    ],

    "outputRoles" : [
        {
            "name": "output_dataset",
            "label": "Output Dataset",
            "description": "",
            "arity": "UNARY",
            "required": true,
            "acceptsDataset": true
        }
    ],

    "params": [
        {
            "type": "SEPARATOR",
            "label": "Graph Parameters"
        },
        {
            "name": "source",
            "label" : "Source",
            "type": "COLUMN",
            "columnRole": "input_dataset",
            "description": "Source nodes column",
            "mandatory" : true
        },
        {
            "name": "target",
            "label" : "Target",
            "type": "COLUMN",
            "columnRole": "input_dataset",
            "description": "Target nodes columns",
            "mandatory" : true
        },
        {
            "name": "weight",
            "label" : "Weight",
            "type": "COLUMN",
            "columnRole": "input_dataset",
            "description": "Column with edges weights (optional)",
            "mandatory" : false
        },
        {
            "name": "directed_graph",
            "type": "BOOLEAN",
            "label": "Directed Graph",
            "description": "",
            "defaultValue": false
        },
        {
            "name": "output_type",
            "type": "SELECT",
            "label": "Output Type",
            "description": "",
            "mandatory": true,
            "selectChoices": [
                    {"value": "output_nodes","label": "Dataset of nodes"}, 
                    {"value": "output_edges","label": "Dataset of edges"}
            ],
            "defaultValue": "output_edges"
        },
        {
            "type": "SEPARATOR",
            "label": "Clustering algorithms"
        },
        {
            "name": "computation_mode",
            "label": "Algorithms to compute",
            "type": "SELECT",
            "selectChoices": [
                {"value": "compute_all_features", "label": "Compute all algorithms"},
                {"value": "select_features", "label": "Select algorithms"}
            ],
            "defaultValue": "compute_all_features"
        },        
        {
            "name": "fastgreedy",
            "label": "Fastgreedy",
            "type": "BOOLEAN",
            "defaultValue": false,
            "description": "Community structure based on the greedy optimization of modularity",
            "visibilityCondition": "model.directed_graph == false && model.computation_mode == 'select_features'"
        },
        {
            "name": "multilevel",
            "label": "Multilevel",
            "type": "BOOLEAN",
            "defaultValue": false,
            "description": "Community structure based on the multilevel algorithm of Blondel et al.",
            "visibilityCondition": "model.directed_graph == false && model.computation_mode == 'select_features'"
        },
        {
            "name": "infomap",
            "label": "Infomap",
            "type": "BOOLEAN",
            "defaultValue": false,
            "description": "Finds the community structure of the network according to the Infomap method of Martin Rosvall and Carl T",
            "visibilityCondition": "model.computation_mode == 'select_features'"
        },
        {
            "name": "walktrap",
            "label": "Walktrap",
            "type": "BOOLEAN",
            "defaultValue": false,
            "description": "Community detection algorithm of Latapy & Pons, based on random walks",
            "visibilityCondition": "model.computation_mode == 'select_features'"
        }
    ]
}
